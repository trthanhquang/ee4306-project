//UpdateCameraView  
//	/EyePosition:0 40 -20  	/LookAtPoint:0 0 0

//ImportScript  
//	/FileName:"Script/ee4306-project/circle_wall.txt"

//Vehicle 2
AddDifferentialDriveEntity    car2
	/Orientation:0    180   0
	/Position: 6.4   0    -16
	/Mass: 10
	AddLaserRangeFinderEntity    lrf_front2
		/Position:0  0.35  -0.25
		/ParentEntity:car2
		/Procedure_SensorNotify: laser_read2
	
	AddCompassEntity    compass2
		/Position:-0.1  0.15  -0.25
		/ParentEntity:car2
		/Procedure_SensorNotify: compass_read2

compassRaw2 = 0
leftAngle2 = 0
rightAngle2 = 0
leftDist2 =50000
rightDist2 = 50000


FlushScript  
Procedure car2Go(power)
{
	while(true)
	{
		call wallFollow2(0.5,power)
		wait 10
	}
}
End

Procedure wallFollow2(goalDist, basePower)
	Kh = 0.5 / 90.0;
	Kd = 0.3;
	angularMax2 = 0.07
	lateralMax2 = 0.05

	angularError2 = Util.ToInt (1000.0* leftAngle2)/1000.0
	angularOutput2 = Kh*angularError2;

	if(angularOutput2 > angularMax2)
		angularOutput2 = angularMax2
	if(angularOutput2 < (-angularMax2))
		angularOutput2 = -angularMax2
	
	lateralError2 = Util.ToInt( 1000.0 *( goalDist - leftDist2))/1000.0;
	lateralOutput2 = Kd*lateralError2

	if(lateralOutput2 > lateralMax2)
		lateralOutput2 = lateralMax2
	if(lateralOutput2 < (-lateralMax2))
		lateralOutput2 = -lateralMax2

	leftPower2 = basePower + angularOutput2 + lateralOutput2
	rightPower2 = basePower - angularOutput2 - lateralOutput2

	leftPower2 = Util.ToInt (1000.0* leftPower2) / 1000.0
	rightPower2 = Util.ToInt (1000.0* rightPower2) / 1000.0
	angularOutput2 = Util.ToInt (1000.0* angularOutput2) / 1000.0
	lateralOutput2 = Util.ToInt (1000.0* lateralOutput2) / 1000.0

//	print "(" + leftPower2 + " " + rightPower2+ ") aErr: "+ angularError2+", laErr: "+ lateralError2 + ", aOut: " + angularOutput2 + ",laOut: "+ lateralOutput2
//	print "laErr: "+ lateralError2 + ", aErr: "+ angularError2+ ", laOut: "+ lateralOutput2 + ", aOut: " + angularOutput2
	car2.Go(leftPower2, rightPower2);
End
//--------------------------------------------------------------------------------------------------//
Procedure compass_read2
	compassRaw2 = value.RawMeasurement
End
//----------------------------------------------------------------------------------------------------
Procedure laser_read2
	left1 =value.DistanceMeasurements[360] / 1000.0
	left2 =value.DistanceMeasurements[330] / 1000.0
	right1 =value.DistanceMeasurements[0] / 1000.0
	right2 =value.DistanceMeasurements[30] /1000.0
	frontDist = value.DistanceMeasurements[180] / 1000.0

	call getAngleToWall2(left1,left2)
	leftAngle2 = getAngleToWall2
	
	call getAngleToWall2(right1,right2)
	rightAngle2 = - getAngleToWall2
	
	call getDistanceToWall2(left1,left2)
	leftDist2 = getDistanceToWall2 + 0.2 * Math.Sin (leftAngle2* Math.PI /180.0)

	call getDistanceToWall2(right1,right2)
	rightDist2 = getDistanceToWall2 - 0.2 * Math.Sin (rightAngle2 * Math.PI /180.0)
End

Procedure getAngleToWall2(d1, d2)
	y = d2 * Math.Sin(Math.PI / 12);
	x = d1 - d2 * Math.Cos(Math.PI / 12);
	a = 90-(Math.Atan (y/x )/Math.PI *180.0);
	if (a>=90) 
		a = a-180;
	return a;
End

Procedure getDistanceToWall2(d1,d2)
	temp2 = (d1 - d2 * Math.Cos(Math.PI /12))/(d2*Math.Sin( Math.PI /12));
	return d1/ Math.Sqrt (1 + Math.Pow (temp2,2));
End