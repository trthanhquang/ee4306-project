UpdateCameraView  
	/EyePosition:0 40 -20  	/LookAtPoint:0 0 0

ImportScript  
	/FileName:"Script/ee4306-project/circle_wall.txt"

//Vehicle 2
AddDifferentialDriveEntity    car2
	/Orientation:0    180   0
	/Position: 6.5   0    0
	/Mass: 10
	AddLaserRangeFinderEntity    lrf_front2
		/Position:0  0.15  -0.25
		/ParentEntity:car2
		/Procedure_SensorNotify: laser_read2
	
	AddCompassEntity    compass2
		/Position:-0.1  0.15  -0.25
		/ParentEntity:car2
		/Procedure_SensorNotify: compass_read2

compassRaw2 = 0
leftAngle2 = 0
rightAngle2 = 0
leftDist2 =50000
rightDist2 = 50000


FlushScript  
Procedure runAround2()
{
	while(true)
	{
		call wallFollow2(0.5,1)
		wait 10
	}
}
End

Procedure wallFollow2(goalDist, basePower)
	Kh = 0.5 / 90.0;
	Kd = 0.3;
	angularMax = 0.07
	lateralMax = 0.05

	angularError = Util.ToInt (1000.0* leftAngle2)/1000.0
	angularOutput = Kh*angularError;

	if(angularOutput > angularMax)
		angularOutput = angularMax
	if(angularOutput < (-angularMax))
		angularOutput = -angularMax
	
	lateralError = Util.ToInt( 1000.0 *( goalDist - leftDist2))/1000.0;
	lateralOutput = Kd*lateralError

	if(lateralOutput > lateralMax)
		lateralOutput = lateralMax
	if(lateralOutput < (-lateralMax))
		lateralOutput = -lateralMax

	leftPower = basePower + angularOutput + lateralOutput
	rightPower = basePower - angularOutput - lateralOutput

	leftPower = Util.ToInt (1000.0* leftPower) / 1000.0
	rightPower = Util.ToInt (1000.0* rightPower) / 1000.0
	angularOutput = Util.ToInt (1000.0* angularOutput) / 1000.0
	lateralOutput = Util.ToInt (1000.0* lateralOutput) / 1000.0

//	print "(" + leftPower + " " + rightPower+ ") aErr: "+ angularError+", laErr: "+ lateralError + ", aOut: " + angularOutput + ",laOut: "+ lateralOutput
//	print "laErr: "+ lateralError + ", aErr: "+ angularError+ ", laOut: "+ lateralOutput + ", aOut: " + angularOutput
	car2.Go(leftPower, rightPower);
End
//--------------------------------------------------------------------------------------------------//
Procedure compass_read2
	compassRaw2 = value.RawMeasurement
End
//----------------------------------------------------------------------------------------------------
Procedure laser_read2
	left1 =value.DistanceMeasurements[360] / 1000.0
	left2 =value.DistanceMeasurements[330] / 1000.0
	right1 =value.DistanceMeasurements[0] / 1000.0
	right2 =value.DistanceMeasurements[30] /1000.0
	frontDist = value.DistanceMeasurements[180] / 1000.0

	call getAngleToWall(left1,left2)
	leftAngle2 = getAngleToWall
	
	call getAngleToWall(right1,right2)
	rightAngle2 = - getAngleToWall
	
	call getDistanceToWall(left1,left2)
	leftDist2 = getDistanceToWall + 0.2 * Math.Sin (leftAngle2* Math.PI /180.0)

	call getDistanceToWall(right1,right2)
	rightDist2 = getDistanceToWall - 0.2 * Math.Sin (rightAngle2 * Math.PI /180.0)
End

Procedure getAngleToWall(d1, d2)
	y = d2 * Math.Sin(Math.PI / 12);
	x = d1 - d2 * Math.Cos(Math.PI / 12);
	a = 90-(Math.Atan (y/x )/Math.PI *180.0);
	if (a>=90) 
		a = a-180;
	return a;
End

Procedure getDistanceToWall(d1,d2)
	temp = (d1 - d2 * Math.Cos(Math.PI /12))/(d2*Math.Sin( Math.PI /12));
	return d1/ Math.Sqrt (1 + Math.Pow (temp,2));
End